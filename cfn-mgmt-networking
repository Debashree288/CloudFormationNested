AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPCman:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDRman
      Tags:
        - Key: Name
          Value: !Join 
            - _
            - - !Ref EnvType
              - VPC
              - !Ref Tagname
  PublicSubnetman:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCman
      CidrBlock: !Ref PublicSubnetCIDRman
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Join 
            - _
            - - !Ref EnvType
              - Pub
              - Subnt
              - AZ1
              - !Ref Tagname
  PrivateSubnetman1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCman
      CidrBlock: !Ref PrivateSubnetCIDRman1
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: 'false'
      Tags:
        - Key: Name
          Value: !Join 
            - _
            - - !Ref EnvType
              - Pub
              - Subnt
              - AZ2
              - !Ref Tagname
  PrivateSubnetman2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCman
      CidrBlock: !Ref PrivateSubnetCIDRman2
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: 'false'
      Tags:
        - Key: Name
          Value: !Join 
            - _
            - - !Ref EnvType
              - Pub
              - Subnt
              - AZ2
              - !Ref Tagname 
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  GatewayAttachement:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPCman
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCman
  PublicRoute:
    DependsOn: GatewayAttachement
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetman
      RouteTableId: !Ref PublicRouteTable
  PrivateRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCman
  PrivateRouteTable2:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCman
  PrivateRoute1:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
  PrivateRoute2:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
  PrivateRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnetman1
  PrivateRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnetman2
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatGatewayOneAttachment.AllocationId
      SubnetId: !Ref PublicSubnetman
  NatGatewayOneAttachment:
    Type: 'AWS::EC2::EIP'
    DependsOn:
      - GatewayAttachement
    Properties:
      Domain: vpc
  S3Endpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: '*'
            Principal: '*'
            Resource: '*'
      RouteTableIds:
        - !Ref PrivateRouteTable1
        - !Ref PrivateRouteTable2
      ServiceName: !Join 
        - ''
        - - com.amazonaws.
          - Ref: 'AWS::Region'
          - .s3
      VpcId: !Ref VPCman
Parameters:
  VPCCIDRman:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: ' This Block is for VPC CIDR (X.X.X.X/X)'
    Type: String
    Default: 10.0.0.0/16
  PublicSubnetCIDRman:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: ' This Block is for VPC CIDR (X.X.X.X/X)'
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnetCIDRman1:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: ' This Block is for VPC CIDR (X.X.X.X/X)'
    Type: String
    Default: 10.0.0.0/24
  PrivateSubnetCIDRman2:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: ' This Block is for VPC CIDR (X.X.X.X/X)'
    Type: String
    Default: 10.0.0.0/24
  AvailabilityZone1:
    Type: 'AWS::EC2::AvailabilityZone::Name'
    Description: Select AZ 1 for for subnet
  AvailabilityZone2:
    Type: 'AWS::EC2::AvailabilityZone::Name'
    Description: Select AZ 2 for subnet
  EnvType:
    Description: ' This Block is for common tag work in value for all the resource'
    Type: String
    Default: manangement env
  Tagname:
    Description: Customer Name for reference tags
    Type: String
    Default: management env
Outputs:
  VPCIDman:
    Value: !Ref VPCman
    Description: Perimeter VPC ID
    Export:
      Name: !Sub '${AWS::StackName}-VPCIDman'
  PrivateSubnetIDman1:
    Description: Private Subnet ID in Perimeter VPC
    Value: !Ref PrivateSubnetman1
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetIDman1'
  PrivateSubnetIDman2:
    Description: Private Subnet ID in Perimeter VPC
    Value: !Ref PrivateSubnetman2
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetIDman2'
  PublicSubnetIDman:
    Description: Public Subnet ID in Perimeter VPC
    Value: !Ref PublicSubnetman
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetIDman'
  RouteTableIDpubman:
    Description: Public Subnet ID in Perimeter VPC
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableIDpubman'
  RouteTableIDpriman1:
    Description: Public Subnet ID in Perimeter VPC
    Value: !Ref PrivateRouteTable1
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableIDpriman1'
  RouteTableIDpriman2:
    Description: Public Subnet ID in Perimeter VPC
    Value: !Ref PrivateRouteTable2
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableIDpriman2'
